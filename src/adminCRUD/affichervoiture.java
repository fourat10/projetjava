/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package adminCRUD;
import java.sql.*;
import ig.Connecteur;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author adem
 */
public class affichervoiture extends javax.swing.JInternalFrame {
    private javax.swing.JDesktopPane jDesktopPane2;

    /**
     * Creates new form affichervoiture
     */
    public affichervoiture() {
        initComponents();
    }
    public affichervoiture(javax.swing.JDesktopPane jDesktopPanel) {
        
        this.jDesktopPane2=jDesktopPanel;
        initComponents();
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private Connection con ; 
    public void load(){
        Connecteur connect=new Connecteur();
       
        con = connect.connecttodb();
        String query = "SELECT * FROM voiture ";
        DefaultTableModel tablemodel =(DefaultTableModel) table.getModel();
        tablemodel.setRowCount(0);
        try {
            Statement stmt = con.createStatement();
            ResultSet res = stmt.executeQuery(query);
            
            while(res.next()){
                String matricule = res.getString("matricule");
                String marque = res.getString("marque");
                String model = res.getString("model");
                String etat = res.getString("etat");
                String dispo = res.getString("disponibilite");
                tablemodel.addRow(new Object[]{matricule,marque,model,etat,dispo});
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(affichervoiture.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        refresh1 = new javax.swing.JButton();
        panne = new javax.swing.JButton();
        march = new javax.swing.JButton();
        att = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        louee = new javax.swing.JButton();
        dispo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "matricule", "Marque", "Model", "Etat", "Disponibilite"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        refresh1.setBackground(new java.awt.Color(255, 255, 102));
        refresh1.setFont(new java.awt.Font("Cambria", 0, 15)); // NOI18N
        refresh1.setText("Refresh");
        refresh1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        refresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh1ActionPerformed(evt);
            }
        });

        panne.setBackground(new java.awt.Color(255, 255, 102));
        panne.setFont(new java.awt.Font("Cambria", 0, 15)); // NOI18N
        panne.setText("en panne");
        panne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        panne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panneActionPerformed(evt);
            }
        });

        march.setBackground(new java.awt.Color(255, 255, 102));
        march.setFont(new java.awt.Font("Cambria", 0, 15)); // NOI18N
        march.setText("en marche");
        march.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        march.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marchActionPerformed(evt);
            }
        });

        att.setBackground(new java.awt.Color(255, 255, 102));
        att.setFont(new java.awt.Font("Cambria", 0, 15)); // NOI18N
        att.setText("en attente");
        att.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        att.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("                        Liste de voiture");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        louee.setBackground(new java.awt.Color(255, 255, 102));
        louee.setFont(new java.awt.Font("Cambria", 0, 15)); // NOI18N
        louee.setText("louee");
        louee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        louee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loueeActionPerformed(evt);
            }
        });

        dispo.setBackground(new java.awt.Color(255, 255, 102));
        dispo.setFont(new java.awt.Font("Cambria", 0, 15)); // NOI18N
        dispo.setText("disponible");
        dispo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        dispo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(march, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(panne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(att, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(louee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addComponent(dispo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dispo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(panne, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(att, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(march, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                    .addComponent(louee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(refresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked

    }//GEN-LAST:event_tableMouseClicked

    private void refresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh1ActionPerformed
        load();
    }//GEN-LAST:event_refresh1ActionPerformed

    private void panneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panneActionPerformed
        Connecteur connect=new Connecteur();
       
        con = connect.connecttodb();
        String query = "SELECT * FROM voiture where etat='"+ "en panne'";
        DefaultTableModel tablemodel =(DefaultTableModel) table.getModel();
        tablemodel.setRowCount(0);
        try {
            Statement stmt = con.createStatement();
            ResultSet res = stmt.executeQuery(query);
            
            while(res.next()){
                String matricule = res.getString("matricule");
                String marque = res.getString("marque");
                String model = res.getString("model");
                String etat = res.getString("etat");
                String dispo = res.getString("disponibilite");
                tablemodel.addRow(new Object[]{matricule,marque,model,etat,dispo});
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(affichervoiture.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }//GEN-LAST:event_panneActionPerformed

    private void attActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attActionPerformed
        Connecteur connect=new Connecteur();
       
        con = connect.connecttodb();
        String query = "SELECT * FROM voiture where etat='"+ "en attente'";
        DefaultTableModel tablemodel =(DefaultTableModel) table.getModel();
        tablemodel.setRowCount(0);
        try {
            Statement stmt = con.createStatement();
            ResultSet res = stmt.executeQuery(query);
            
            while(res.next()){
                String matricule = res.getString("matricule");
                String marque = res.getString("marque");
                String model = res.getString("model");
                String etat = res.getString("etat");
                String dispo = res.getString("disponibilite");
                tablemodel.addRow(new Object[]{matricule,marque,model,etat,dispo});
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(affichervoiture.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }//GEN-LAST:event_attActionPerformed

    private void marchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marchActionPerformed
        Connecteur connect=new Connecteur();
       
        con = connect.connecttodb();
        String query = "SELECT * FROM voiture where etat='"+ "en marche'";
        DefaultTableModel tablemodel =(DefaultTableModel) table.getModel();
        tablemodel.setRowCount(0);
        try {
            Statement stmt = con.createStatement();
            ResultSet res = stmt.executeQuery(query);
            
            while(res.next()){
                String matricule = res.getString("matricule");
                String marque = res.getString("marque");
                String model = res.getString("model");
                String etat = res.getString("etat");
                String dispo = res.getString("disponibilite");
                tablemodel.addRow(new Object[]{matricule,marque,model,etat,dispo});               
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(affichervoiture.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }//GEN-LAST:event_marchActionPerformed

    private void loueeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loueeActionPerformed
       Connecteur connect=new Connecteur();
       
        con = connect.connecttodb();
        String query = "SELECT * FROM voiture where disponibilite='"+ "louee'";
        DefaultTableModel tablemodel =(DefaultTableModel) table.getModel();
        tablemodel.setRowCount(0);
        try {
            Statement stmt = con.createStatement();
            ResultSet res = stmt.executeQuery(query);
            
            while(res.next()){
                String matricule = res.getString("matricule");
                String marque = res.getString("marque");
                String model = res.getString("model");
                String etat = res.getString("etat");
                String dispo = res.getString("disponibilite");
                tablemodel.addRow(new Object[]{matricule,marque,model,etat,dispo});
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(affichervoiture.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }//GEN-LAST:event_loueeActionPerformed

    private void dispoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispoActionPerformed
       Connecteur connect=new Connecteur();
       
        con = connect.connecttodb();
        String query = "SELECT * FROM voiture where disponibilite='"+ "disponible'";
        DefaultTableModel tablemodel =(DefaultTableModel) table.getModel();
        tablemodel.setRowCount(0);
        try {
            Statement stmt = con.createStatement();
            ResultSet res = stmt.executeQuery(query);
            
            while(res.next()){
                String matricule = res.getString("matricule");
                String marque = res.getString("marque");
                String model = res.getString("model");
                String etat = res.getString("etat");
                String dispo = res.getString("disponibilite");
                tablemodel.addRow(new Object[]{matricule,marque,model,etat,dispo});
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(affichervoiture.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }//GEN-LAST:event_dispoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton att;
    private javax.swing.JButton dispo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton louee;
    private javax.swing.JButton march;
    private javax.swing.JButton panne;
    private javax.swing.JButton refresh1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
